Simond Hugo, Saraïs Anthony, Karassev Marc

Noyau : mini-projet Karassev-Marongiu
	- packages equipment, user, config, utils
	- classes Loan, Inventory

Reconception :
	- abandon de la structure MVC :
		L'utilisation de la structure MVC nous faisait perdre les intéractions entre les différentes classes issues de la conception objet naturelle et compliquait donc le programme en rajoutant des classes et en dupliquant du code. [J'ai eu l'impression de devoir faire des concessions au MVC au détriment de la conception objet originale.]
		Ceci était peut-être du à une mauvaise implémentation du design pattern.
	- réusinage du package equipment :
		Suppression des classes définissant un modèle précis d'équipement pour permettre l'extensibilité.
		Modification de la génération des identifiants de façon à ce qu'ils soient conforment à l'énoncé du mini-projet d'IPA.
		Suppression de l'attribut unavailabalityPeriods, remplacé par une HashMap de Loan dans l'inventaire pour ce qui est de leur utilisation. Réduit la duplication en mémoire (cette information était et est stockée de façon analogue dans les attributs de la classe Loan).
	- réusinage du package user :
		Suppression des classes Student et Teacher ayant le même comportement, ajout d'une énumération pour le type d'emprunteur.
		Remplacement de l'attribut LoanList de la classe Borrower par une méthode de l'inventaire recherchant les emprunts correspondants à un utilisateur. Diminue la duplication en mémoire.
	- réusinage du package config :
		Réécriture des classes de configuration XML.
	- réusinage de la classe Loan :
		Remplacement des attributs model et equipmentID par une HashMap de clé les modèles voulus et de valeur les listes d'équipements correspondants pour permettre la sélection de plusieurs équipement dans un emprunt.
		Ajout d'attributs définissant l'état de l'emprunt, s'il est validé, s'il a été rendu.
		Ajout d'une méthode décrivant le statut de l'emprunt, s'il est en cours, terminé mais non rendu, ou non démarré.
		Création d'une classe Ask pour différencier les demandes d'emprunts et l'affectation d'équipements.
	- réusinage de l'énum Model :
		Transformation en classe disposant d'attributs spécifiants des contraintes d'emprunt spécifiques.
		Ajout d'une classe Models étendant HashSet pour y répertorier des Model.
	- réusinage de la classe Inventory :
		Renommée en ManagementSystem et transformée en singleton.
		Ajout d'un attribut ArrayList d'emprunts afin de pallier à la disparition de l'attribut unavailabalityPeriods de la classe equipment.Equipment.
		Ajout d'une méthode affichant les emprunts par utilisateur et de deux autres méthodes retournant si un équipement est disponible maintenant ou pendant une certaine période pour pallier à la disparition de l'attribut LoanList de la classe user.Borrower.
		Ajout d'un attribut ArrayList d'user pour répertorier tous les utilisateurs.
		Ajout d'un attribut Models pour y répertorier tous les modèles correspondants.
		Création de classes étendant ArrayList ou HashMap pour remplacer les différents atributs de ManagementSystem et y ranger les méthodes de recherches spécifiques.

Statistiques : mini-projet Saraïs-Sintes

IHM : mini-projet Simond-

Serialisation :

Configuration (XML ?) :
